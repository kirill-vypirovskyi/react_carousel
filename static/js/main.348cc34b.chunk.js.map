{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentIndex","maxIndex","props","images","length","frameSize","moveRight","step","infinite","nextStep","isEnouphPlace","setState","moveLeft","this","itemWidth","animationDuration","className","style","width","transition","transform","map","image","imageId","parseInt","slice","src","alt","type","onClick","disabled","Component","App","toggleInfinite","prevState","htmlFor","id","defaultValue","onChange","event","Number","target","value","min","max","defaultChecked","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.348cc34b.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  currentIndex: number;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    currentIndex: 0,\n  };\n\n  maxIndex = this.props.images.length - this.props.frameSize;\n\n  moveRight = () => {\n    const {\n      step,\n      infinite,\n    } = this.props;\n\n    const nextStep = this.state.currentIndex + step;\n    const isEnouphPlace = this.maxIndex >= (nextStep);\n\n    if (infinite && this.state.currentIndex === this.maxIndex) {\n      this.setState({ currentIndex: 0 });\n\n      return;\n    }\n\n    if (isEnouphPlace) {\n      this.setState({ currentIndex: nextStep });\n\n      return;\n    }\n\n    this.setState({ currentIndex: this.maxIndex });\n  };\n\n  moveLeft = () => {\n    const {\n      step,\n      infinite,\n    } = this.props;\n\n    const nextStep = this.state.currentIndex - step;\n    const isEnouphPlace = (nextStep) >= 0;\n\n    if (infinite && this.state.currentIndex === 0) {\n      this.setState({ currentIndex: this.maxIndex });\n\n      return;\n    }\n\n    if (isEnouphPlace) {\n      this.setState({ currentIndex: nextStep });\n\n      return;\n    }\n\n    this.setState({ currentIndex: 0 });\n  };\n\n  render() {\n    const {\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    return (\n      <>\n        <div\n          className=\"Carousel\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n            transition: `${animationDuration}ms`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${-this.state.currentIndex * itemWidth}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }}\n          >\n            {\n              this.props.images.map((image) => {\n                const imageId = parseInt(image.slice(6), 10);\n\n                return (\n                  <li key={imageId}>\n                    <img\n                      src={image}\n                      alt={`${imageId}`}\n                      width={itemWidth}\n                    />\n                  </li>\n                );\n              })\n            }\n          </ul>\n        </div>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            onClick={this.moveLeft}\n            disabled={this.state.currentIndex === 0 && !infinite}\n          >\n            Prev\n          </button>\n\n          <button\n            className=\"Carousel__button Carousel__button--next\"\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={this.moveRight}\n            disabled={this.state.currentIndex === this.maxIndex && !infinite}\n          >\n            Next\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  frameSize: number;\n  step: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    frameSize: 3,\n    step: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  toggleInfinite = () => {\n    this.setState((prevState) => ({ infinite: !prevState.infinite }));\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy='title'>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div className=\"settings\">\n          <label htmlFor=\"itemId\">\n            <p>Items width: </p>\n\n            <input\n              className=\"settings__input\"\n              id=\"itemId\"\n              type=\"number\"\n              defaultValue={itemWidth}\n              onChange={(event) => {\n                this.setState({ itemWidth: Number(event.target.value) });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"frameId\">\n            <p>Amount of images in frame: </p>\n\n            <input\n              className=\"settings__input\"\n              id=\"frameId\"\n              type=\"number\"\n              min={1}\n              max={5}\n              defaultValue={frameSize}\n              onChange={(event) => {\n                this.setState({ frameSize: Number(event.target.value) });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"stepId\">\n            <p>Step size: </p>\n\n            <input\n              className=\"settings__input\"\n              id=\"stepId\"\n              type=\"number\"\n              min={1}\n              max={5}\n              defaultValue={step}\n              onChange={(event) => {\n                this.setState({ step: Number(event.target.value) });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"animationId\">\n            <p>Set animation duration in ms: </p>\n\n            <input\n              className=\"settings__input\"\n              id=\"animationId\"\n              type=\"number\"\n              step=\"100\"\n              defaultValue={animationDuration}\n              onChange={(event) => {\n                this.setState(\n                  { animationDuration: Number(event.target.value) },\n                );\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"infiniteId\">\n            <p>Infinite: </p>\n\n            <input\n              className=\"settings__checkbox\"\n              id=\"infiniteId\"\n              type=\"checkbox\"\n              defaultChecked={infinite}\n              onChange={this.toggleInfinite}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}